package org.anyline.entity.mdtadata;

import java.util.Hashtable;
import java.util.Map;

public class ColumnTypeHolder {
    public static Map<String, ColumnType> types = new Hashtable<>();
    static {
        ColumnType BFILE             = new ColumnType() {public String getName(){return"BFILE";}               public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //        ,oracle
        ColumnType BINARY_DOUBLE     = new ColumnType() {public String getName(){return"BINARY_DOUBLE";}       public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //        ,oracle
        ColumnType BINARY_FLOAT      = new ColumnType() {public String getName(){return"BINARY_FLOAT";}        public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //        ,oracle
        ColumnType BIGINT            = new ColumnType() {public String getName(){return"BIGINT";}              public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType BINARY            = new ColumnType() {public String getName(){return"BINARY";}              public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType BIT               = new ColumnType() {public String getName(){return"BIT";}                 public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //mysql,pg
        ColumnType BLOB              = new ColumnType() {public String getName(){return"BLOB";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql,  ,oracle
        ColumnType BOOL              = new ColumnType() {public String getName(){return"BOOL";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType BOX               = new ColumnType() {public String getName(){return"BOX";}                 public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType BYTEA             = new ColumnType() {public String getName(){return"BYTEA";}               public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType CHAR              = new ColumnType() {public String getName(){return"CHAR";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql,pg
        ColumnType CIDR              = new ColumnType() {public String getName(){return"CIDR";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //      pg
        ColumnType CIRCLE            = new ColumnType() {public String getName(){return"CIRCLE";}              public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //      pg
        ColumnType CLOB              = new ColumnType() {public String getName(){return"CLOB";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //        ,oracle
        ColumnType DATE              = new ColumnType() {public String getName(){return"DATE";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql,pg,oracle
        ColumnType DATETIME          = new ColumnType() {public String getName(){return"DATETIME";}            public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType DECIMAL           = new ColumnType() {public String getName(){return"DECIMAL";}             public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return false;}}; //mysql,  ,oracle
        ColumnType DOUBLE            = new ColumnType() {public String getName(){return"DOUBLE";}              public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return false;}}; //mysql
        ColumnType ENUM              = new ColumnType() {public String getName(){return"ENUM";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType FLOAT             = new ColumnType() {public String getName(){return"FLOAT";}               public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return false;}}; //mysql,  ,oracle
        ColumnType INET              = new ColumnType() {public String getName(){return"INET";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType INTERVAL          = new ColumnType() {public String getName(){return"INTERVAL";}            public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType GEOMETRY          = new ColumnType() {public String getName(){return"GEOMETRY";}            public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType GEOMETRYCOLLECTIO = new ColumnType() {public String getName(){return"GEOMETRYCOLLECTION";}  public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType INT               = new ColumnType() {public String getName(){return"INT";}                 public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType INTEGER           = new ColumnType() {public String getName(){return"INTEGER";}             public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType JSON              = new ColumnType() {public String getName(){return"JSON";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql,pg
        ColumnType JSONB             = new ColumnType() {public String getName(){return"JSONB";}               public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType LINE              = new ColumnType() {public String getName(){return"LINE";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql,pg
        ColumnType LSEG              = new ColumnType() {public String getName(){return"LSEG";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType MACADDR           = new ColumnType() {public String getName(){return"MACADDR";}             public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType MONEY             = new ColumnType() {public String getName(){return"MONEY";}               public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType NUMBER            = new ColumnType() {public String getName(){return"NUMBER";}              public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return false;}}; //     ,  ,oracle
        ColumnType NCHAR             = new ColumnType() {public String getName(){return"NCHAR";}               public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //     ,  ,oracle
        ColumnType NCLOB             = new ColumnType() {public String getName(){return"NCLOB";}               public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,  ,oracle
        ColumnType NVARCHAR2         = new ColumnType() {public String getName(){return"NVARCHAR2";}           public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //     ,  ,oracle
        ColumnType PATH              = new ColumnType() {public String getName(){return"PATH";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType LONGBLOB          = new ColumnType() {public String getName(){return"LONGBLOB";}            public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType LONGTEXT          = new ColumnType() {public String getName(){return"LONGTEXT";}            public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType MEDIUMBLOB        = new ColumnType() {public String getName(){return"MEDIUMBLOB";}          public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType MEDIUMINT         = new ColumnType() {public String getName(){return"MEDIUMINT";}           public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType MEDIUMTEXT        = new ColumnType() {public String getName(){return"MEDIUMTEXT";}          public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType MULTILINESTRING   = new ColumnType() {public String getName(){return"MULTILINESTRING";}     public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType MULTIPOINT        = new ColumnType() {public String getName(){return"MULTIPOINT";}          public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType MULTIPOLYGON      = new ColumnType() {public String getName(){return"MULTIPOLYGON";}        public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType NUMERIC           = new ColumnType() {public String getName(){return"NUMERIC";}             public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return false;}}; //mysql
        ColumnType POINT             = new ColumnType() {public String getName(){return"POINT";}               public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql,pg
        ColumnType POLYGON           = new ColumnType() {public String getName(){return"POLYGON";}             public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql,pg
        ColumnType REAL              = new ColumnType() {public String getName(){return"REAL";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType RAW               = new ColumnType() {public String getName(){return"RAW";}                 public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //     ,  ,oracle
        ColumnType ROWID             = new ColumnType() {public String getName(){return"ROWID";}               public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //     ,  ,oracle
        ColumnType SET               = new ColumnType() {public String getName(){return"SET";}                 public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType SMALLINT          = new ColumnType() {public String getName(){return"SMALLINT";}            public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType TEXT              = new ColumnType() {public String getName(){return"TEXT";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql,pg
        ColumnType TIME              = new ColumnType() {public String getName(){return"TIME";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql,pg
        ColumnType TIMEZ             = new ColumnType() {public String getName(){return"TIMEZ";}               public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType TIMESTAMP         = new ColumnType() {public String getName(){return"TIMESTAMP";}           public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql,pg,oracle
        ColumnType TIMESTAMPZ        = new ColumnType() {public String getName(){return"TIMESTAMPZ";}          public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType TSQUERY           = new ColumnType() {public String getName(){return"TSQUERY";}             public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType TSVECTOR          = new ColumnType() {public String getName(){return"TSVECTOR";}            public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType TXID_SNAPSHOT     = new ColumnType() {public String getName(){return"TXID_SNAPSHOT";}       public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType UUID              = new ColumnType() {public String getName(){return"UUID";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType UROWID            = new ColumnType() {public String getName(){return"UROWID";}              public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //     ,  ,oracle
        ColumnType VARBIT            = new ColumnType() {public String getName(){return"VARBIT";}              public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType TINYBLOB          = new ColumnType() {public String getName(){return"TINYBLOB";}            public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType TINYINT           = new ColumnType() {public String getName(){return"TINYINT";}             public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType TINYTEXT          = new ColumnType() {public String getName(){return"TINYTEXT";}            public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType VARBINARY         = new ColumnType() {public String getName(){return"VARBINARY";}           public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //mysql
        ColumnType VARCHAR           = new ColumnType() {public String getName(){return"VARCHAR";}             public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //mysql,pg,oracle
        ColumnType VARCHAR2          = new ColumnType() {public String getName(){return"VARCHAR2";}            public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return false;}   public boolean isIgnoreScale(){return true;}};  //     ,  ,oracle
        ColumnType XML               = new ColumnType() {public String getName(){return"XML";}                 public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //     ,pg
        ColumnType YEAR              = new ColumnType() {public String getName(){return"YEAR";}                public Object read(Object value, Class clazz){return value;}    public Object write(Object value, boolean placeholder){return value;}    public boolean isIgnorePrecision(){return true;}    public boolean isIgnoreScale(){return true;}};  //mysql

        types.put("BFILE"             , BFILE             ); //        ,oracle
        types.put("BINARY_DOUBLE"     , BINARY_DOUBLE     ); //        ,oracle
        types.put("BINARY_FLOAT"      , BINARY_FLOAT      ); //        ,oracle
        types.put("BIGINT"            , BIGINT            ); //mysql
        types.put("BINARY"            , BINARY            ); //mysql
        types.put("BIT"               , BIT               ); //mysql,pg
        types.put("BLOB"              , BLOB              ); //mysql,  ,oracle
        types.put("BOOL"              , BOOL              ); //     ,pg
        types.put("BOX"               , BOX               ); //     ,pg
        types.put("BYTEA"             , BYTEA             ); //     ,pg
        types.put("CHAR"              , CHAR              ); //mysql,pg
        types.put("CIDR"              , CIDR              ); //      pg
        types.put("CIRCLE"            , CIRCLE            ); //      pg
        types.put("CLOB"              , CLOB              ); //        ,oracle
        types.put("DATE"              , DATE              ); //mysql,pg,oracle
        types.put("DATETIME"          , DATETIME          ); //mysql
        types.put("DECIMAL"           , DECIMAL           ); //mysql,  ,oracle
        types.put("DOUBLE"            , DOUBLE            ); //mysql
        types.put("ENUM"              , ENUM              ); //mysql
        types.put("FLOAT"             , FLOAT             ); //mysql,  ,oracle
        types.put("INET"              , INET              ); //     ,pg
        types.put("INTERVAL"          , INTERVAL          ); //     ,pg
        types.put("GEOMETRY"          , GEOMETRY          ); //mysql
        types.put("GEOMETRYCOLLECTIO" , GEOMETRYCOLLECTIO ); //mysql
        types.put("INT"               , INT               ); //mysql
        types.put("INTEGER"           , INTEGER           ); //mysql
        types.put("JSON"              , JSON              ); //mysql,pg
        types.put("JSONB"             , JSONB             ); //     ,pg
        types.put("LINE"              , LINE              ); //mysql,pg
        types.put("LSEG"              , LSEG              ); //     ,pg
        types.put("MACADDR"           , MACADDR           ); //     ,pg
        types.put("MONEY"             , MONEY             ); //     ,pg
        types.put("NUMBER"            , NUMBER            ); //     ,  ,oracle
        types.put("NCHAR"             , NCHAR             ); //     ,  ,oracle
        types.put("NCLOB"             , NCLOB             ); //     ,  ,oracle
        types.put("NVARCHAR2"         , NVARCHAR2         ); //     ,  ,oracle
        types.put("PATH"              , PATH              ); //     ,pg
        types.put("LONGBLOB"          , LONGBLOB          ); //mysql
        types.put("LONGTEXT"          , LONGTEXT          ); //mysql
        types.put("MEDIUMBLOB"        , MEDIUMBLOB        ); //mysql
        types.put("MEDIUMINT"         , MEDIUMINT         ); //mysql
        types.put("MEDIUMTEXT"        , MEDIUMTEXT        ); //mysql
        types.put("MULTILINESTRING"   , MULTILINESTRING   ); //mysql
        types.put("MULTIPOINT"        , MULTIPOINT        ); //mysql
        types.put("MULTIPOLYGON"      , MULTIPOLYGON      ); //mysql
        types.put("NUMERIC"           , NUMERIC           ); //mysql
        types.put("POINT"             , POINT             ); //mysql,pg
        types.put("POLYGON"           , POLYGON           ); //mysql,pg
        types.put("REAL"              , REAL              ); //mysql
        types.put("RAW"               , RAW               ); //     ,  ,oracle
        types.put("ROWID"             , ROWID             ); //     ,  ,oracle
        types.put("SET"               , SET               ); //mysql
        types.put("SMALLINT"          , SMALLINT          ); //mysql
        types.put("TEXT"              , TEXT              ); //mysql,pg
        types.put("TIME"              , TIME              ); //mysql,pg
        types.put("TIMEZ"             , TIMEZ             ); //     ,pg
        types.put("TIMESTAMP"         , TIMESTAMP         ); //mysql,pg,oracle
        types.put("TIMESTAMPZ"        , TIMESTAMPZ        ); //     ,pg
        types.put("TSQUERY"           , TSQUERY           ); //     ,pg
        types.put("TSVECTOR"          , TSVECTOR          ); //     ,pg
        types.put("TXID_SNAPSHOT"     , TXID_SNAPSHOT     ); //     ,pg
        types.put("UUID"              , UUID              ); //     ,pg
        types.put("UROWID"            , UROWID            ); //     ,  ,oracle
        types.put("VARBIT"            , VARBIT            ); //     ,pg
        types.put("TINYBLOB"          , TINYBLOB          ); //mysql
        types.put("TINYINT"           , TINYINT           ); //mysql
        types.put("TINYTEXT"          , TINYTEXT          ); //mysql
        types.put("VARBINARY"         , VARBINARY         ); //mysql
        types.put("VARCHAR"           , VARCHAR           ); //mysql,pg,oracle
        types.put("VARCHAR2"          , VARCHAR2          ); //     ,  ,oracle
        types.put("XML"               , XML               ); //     ,pg
        types.put("YEAR"              , YEAR              ); //mysql
    }
}
