当一个项目需要同时操作多个数据库时,可配置多个数据源

<bean id="ds_my" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">

<property name="url" value="jdbc:mysql://127.0.0.1:36902/mydb?useUnicode=true&amp;characterEncoding=UTF8" />

<property name="username" value="root" />

<property name="password" value="" />

</bean>

<bean id="ds_ms" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">

<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>

<property name="url" value="jdbc:sqlserver://127.0.0.1:36901;databaseName=msdb" />

<property name="username" value="sa" />

<property name="password" value="" />

</bean>

<bean id="ds" class="org.anyline.config.db.ds.DynamicDataSource">  

    <property name="targetDataSources">  

<map key-type="java.lang.String">

    <!-- 指定lookupKey和与之对应的数据源 -->

    <entry key="ds_my" value-ref="ds_my"></entry>  

    <entry key="ds_ms" value-ref="ds_ms"></entry>  

</map>  

    </property>  

    <!-- 这里可以指定默认的数据源 -->

    <property name="defaultTargetDataSource" ref="ds_dev" />  

</bean>

<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">

<property name="dataSource" ref="ds" />

</bean>

运行时有两种方式切换数据源

DataSourceHolder.setDataSource(ds_my);

DataSourceHolder.setDataSource(ds_my, true);//true表示执行一条SQL后,自动切换回默认数据源

service.query("<ds_ms>art"); 以<数据源>开头,执行当前SQL后,自动切换回默认数据源



注意:不支持在事务中切换数据源

如果需要事务,并需要切换数据源,一般在将需要事务的逻辑单独放到一个方法中,在子方法中添加事务支持